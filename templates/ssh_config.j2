{{ ansible_managed | comment }}
{{ "system_role:ssh" | comment(prefix="", postfix="") }}
{% macro render_option(key, value, indent=false) -%}
  {%- if value is defined and value is not none -%}
    {%- if value is sameas true -%}
      {%- if indent %}  {% endif %}{{ key }} yes
    {%- elif value is sameas false -%}
      {%- if indent %}  {% endif %}{{ key }} no
    {%- elif value is string or value is number -%}
      {%- if indent %}  {% endif %}{{ key }} {{ value | string }}
    {%- elif value is iterable -%}
      {%- for i in value -%}
        {%- if indent %}  {% endif %}{{ key }} {{ i | string }}
        {%- if not loop.last %}
{% endif -%}
      {%- endfor -%}
    {%- endif -%}
  {%- endif -%}
{%- endmacro %}
{% macro body_option(key, override) -%}
  {%- set value = none -%}
  {%- if override is defined and override is not none -%}
    {%- set value = override -%}
  {%- elif ssh[key] is defined and ssh[key] is not none -%}
    {%- set value = ssh[key] -%}
  {%- elif __ssh_defaults[key] is defined and __ssh_defaults[key] is not none and not __ssh_skip_defaults | trim | bool -%}
    {%- set value = __ssh_defaults[key] -%}
  {%- endif -%}
  {%- if value is defined and value is not none -%}
{{ render_option(key, value) }}
  {%- endif -%}
{%- endmacro %}
{% macro match_block(match_list) -%}
  {%- if match_list is defined and match_list is not none -%}
    {%- if match_list["Condition"] is defined -%}
      {%- set match_list = [ match_list ] -%}
    {%- endif -%}
    {%- if match_list is iterable -%}
      {%- for match in match_list -%}
        {%- if match is defined and match is not none and match["Condition"] is defined -%}
Match {{ match["Condition"] }}
          {%- for key, value in match.items() -%}
            {%- if key != "Condition" and value is defined and value is not none -%}
{{ render_option(key, value, true) }}
            {%- endif -%}
          {%- endfor -%}
        {%- endif -%}
      {%- endfor -%}
    {%- endif -%}
  {%- endif -%}
{%- endmacro %}
{% macro host_block(host_list) -%}
  {%- if host_list is defined and host_list is not none -%}
    {%- if host_list["Condition"] is defined -%}
      {%- set host_list = [host_list] -%}
    {%- endif -%}
    {%- if host_list is iterable -%}
      {%- for host in host_list -%}
        {%- if host is defined and host is not none and host["Condition"] is defined -%}
Host {{ host["Condition"] }}
          {%- for key, value in host.items() -%}
            {%- if key != "Condition" and value is defined and value is not none -%}
{{ render_option(key, value, true) }}
            {%- endif -%}
          {%- endfor -%}
        {%- endif -%}
      {%- endfor -%}
    {%- endif -%}
  {%- endif -%}
{%- endmacro %}
{% set ssh_options = [
  "AddKeysToAgent", "AddressFamily", "BatchMode", "BindAddress", "BindInterface",
  "CanonicalDomains", "CanonicalizeFallbackLocal", "CanonicalizeHostname",
  "CanonicalizeMaxDots", "CanonicalizePermittedCNAMEs", "CASignatureAlgorithms",
  "CertificateFile", "ChallengeResponseAuthentication", "ChannelTimeout",
  "CheckHostIP", "Cipher", "Ciphers", "ClearAllForwardings", "Compression",
  "CompressionLevel", "ConnectionAttempts", "ConnectTimeout", "ControlMaster",
  "ControlPath", "ControlPersist", "DynamicForward", "EnableEscapeCommandline",
  "EnableSSHKeysign", "EscapeChar", "ExitOnForwardFailure", "FingerprintHash",
  "ForkAfterAuthentication", "ForwardAgent", "ForwardX11", "ForwardX11Timeout",
  "ForwardX11Trusted", "GatewayPorts", "GlobalKnownHostsFile", "GSSAPIAuthentication",
  "GSSAPIClientIdentity", "GSSAPIDelegateCredentials", "GSSAPIKeyExchange",
  "GSSAPIRenewalForcesRekey", "GSSAPIServerIdentity", "GSSAPITrustDns",
  "GSSAPIKexAlgorithms", "HashKnownHosts", "HostbasedAuthentication",
  "HostbasedKeyTypes", "HostbasedAcceptedAlgorithms", "HostKeyAlgorithms",
  "HostKeyAlias", "Hostname", "HostName", "IdentitiesOnly", "IdentityAgent",
  "IdentityFile", "IgnoreUnknown", "Include", "IPQoS", "KbdInteractiveAuthentication",
  "KbdInteractiveDevices", "KexAlgorithms", "KnownHostsCommand", "LocalCommand",
  "LocalForward", "LogLevel", "LogVerbose", "MACs", "NoHostAuthenticationForLocalhost",
  "NumberOfPasswordPrompts", "ObscureKeystrokeTiming", "PasswordAuthentication",
  "PermitLocalCommand", "PermitRemoteOpen", "PKCS11Provider", "Port",
  "PreferredAuthentications", "Protocol", "ProxyCommand", "ProxyJump",
  "ProxyUseFdpass", "PubkeyAcceptedKeyTypes", "PubkeyAcceptedAlgorithms",
  "PubkeyAuthentication", "RekeyLimit", "RemoteCommand", "RemoteForward",
  "RequestTTY", "RequiredRSASize", "RevokedHostKeys", "RhostsRSAAuthentication",
  "RSAAuthentication", "RSAMinSize", "SecurityKeyProvider", "SendEnv",
  "ServerAliveCountMax", "ServerAliveInterval", "SessionType", "SetEnv",
  "StdinNull", "StreamLocalBindMask", "StreamLocalBindUnlink", "StrictHostKeyChecking",
  "SyslogFacility", "TCPKeepAlive", "Tunnel", "TunnelDevice", "UpdateHostKeys",
  "UsePrivilegedPort", "User", "UserKnownHostsFile", "VerifyHostKeyDNS",
  "VisualHostKey", "XAuthLocation"
] -%}
{% for option in ssh_options -%}
  {%- set var_name = "ssh_" + option -%}
  {%- if vars[var_name] is defined and vars[var_name] is not none -%}
{{ body_option(option, vars[var_name]) }}
  {%- elif ssh[option] is defined and ssh[option] is not none -%}
{{ body_option(option, ssh[option]) }}
  {%- elif __ssh_defaults[option] is defined and __ssh_defaults[option] is not none and not __ssh_skip_defaults | trim | bool -%}
{{ body_option(option, __ssh_defaults[option]) }}
  {%- endif -%}
{%- endfor %}

{% if ssh['Match'] is defined and ssh['Match'] is not none -%}
{{ match_block(ssh['Match']) }}
{%- endif %}
{% if __ssh_defaults['Match'] is defined and __ssh_defaults['Match'] is not none and not __ssh_skip_defaults | trim | bool -%}
{{ match_block(__ssh_defaults['Match']) }}
{%- endif %}
{% if ssh_Match is defined and ssh_Match is not none -%}
{{ match_block(ssh_Match) }}
{%- endif %}
{% if ssh['Host'] is defined and ssh['Host'] is not none -%}
{{ host_block(ssh['Host']) }}
{%- endif %}
{% if __ssh_defaults['Host'] is defined and __ssh_defaults['Host'] is not none and not __ssh_skip_defaults | trim | bool -%}
{{ host_block(__ssh_defaults['Host']) }}
{%- endif %}
{% if ssh_Host is defined and ssh_Host is not none -%}
{{ host_block(ssh_Host) }}
{%- endif %}
